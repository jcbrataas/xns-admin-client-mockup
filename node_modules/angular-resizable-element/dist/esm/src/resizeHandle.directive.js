import { Directive, Input, HostListener } from '@angular/core';
/**
 * An element placed inside a `mwlResizable` directive to be used as a drag and resize handle
 *
 * For example
 *
 * ```
 * &lt;div mwlResizable&gt;
 *   &lt;div mwlResizeHandle [resizeEdges]="{bottom: true, right: true}"&gt;&lt;/div&gt;
 * &lt;/div&gt;
 * ```
 */
export var ResizeHandle = (function () {
    function ResizeHandle() {
        /**
         * The `Edges` object that contains the edges of the parent element that dragging the handle will trigger a resize on
         */
        this.resizeEdges = {};
    }
    /**
     * @private
     */
    ResizeHandle.prototype.onMousedown = function (mouseX, mouseY) {
        this.resizable.mousedown.next({ mouseX: mouseX, mouseY: mouseY, edges: this.resizeEdges });
    };
    /**
     * @private
     */
    ResizeHandle.prototype.onMousemove = function (event, mouseX, mouseY) {
        this.resizable.mousemove.next({ mouseX: mouseX, mouseY: mouseY, edges: this.resizeEdges, event: event });
    };
    /**
     * @private
     */
    ResizeHandle.prototype.onMouseup = function (mouseX, mouseY) {
        this.resizable.mouseup.next({ mouseX: mouseX, mouseY: mouseY, edges: this.resizeEdges });
    };
    ResizeHandle.decorators = [
        { type: Directive, args: [{
                    selector: '[mwlResizeHandle]'
                },] },
    ];
    /** @nocollapse */
    ResizeHandle.ctorParameters = function () { return []; };
    ResizeHandle.propDecorators = {
        'resizeEdges': [{ type: Input },],
        'onMousedown': [{ type: HostListener, args: ['touchstart', ['$event.touches[0].clientX', '$event.touches[0].clientY'],] }, { type: HostListener, args: ['mousedown', ['$event.clientX', '$event.clientY'],] },],
        'onMousemove': [{ type: HostListener, args: ['touchmove', ['$event', '$event.targetTouches[0].clientX', '$event.targetTouches[0].clientY'],] }, { type: HostListener, args: ['mousemove', ['$event', '$event.clientX', '$event.clientY'],] },],
        'onMouseup': [{ type: HostListener, args: ['touchend', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY'],] }, { type: HostListener, args: ['touchcancel', ['$event.changedTouches[0].clientX', '$event.changedTouches[0].clientY'],] }, { type: HostListener, args: ['mouseup', ['$event.clientX', '$event.clientY'],] },],
    };
    return ResizeHandle;
}());
//# sourceMappingURL=resizeHandle.directive.js.map